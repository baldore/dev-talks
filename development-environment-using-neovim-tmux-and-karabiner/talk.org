* Development environment using the Terminal, Neovim and Tmux
** Index
*** Goals
- Arouse curiosity about environment customization.
- Share some tips and tools that can be helpful to improve or think about your own development environment.
- To understand that you can choose to integrate any tool you want. No need to follow everything. If you're comfortable with your current environment, great!

~Note~: This talk is not a deep dive in the tools. It's an overview of what is possible.

*** What should you look for in a good development environment?
- Avoid repeating tasks.
- Comfort.
- Ergonomics.
- Fun... Because why not?

*** Tools
**** Terminal
One of the best tools for development.

***** Why?
- You can do everything!
- Composition via pipe (|)
- Lots of applications (and easy to install depending on the system)
- You can create your own apps!

***** CLI Applications: Unix
Some useful apps are:
- ~grep~: file pattern searcher.
- ~curl~: client for URLs. (~curl cheat.sh/<pattern>~ is a good tool).
- ~find~: find files.
- ~xargs~: manipulate a list and use each element in other apps.
- ~man~: manual for any application (that actually has documentation...)

***** Other apps (not installed by default)
- ~fzf~: amazing fuzzy search app. Very customizable.
- ~ripgrep~: faster grep alternative written in Rust.

***** Example
#+begin_src bash
# make a request to reddit and get the value of "kind"
curl -A 'random' -s https://www.reddit.com/r/vim.json | jq .kind
#+end_src

#+begin_src bash
# Uses gh cli to clone one personal repository
ghclone() {
  TARGET="$1"

  REPO=$(gh repo list | awk '{ print $1 }' | fzf)
  if [ -z "$REPO" ]; then
    return 1
  fi

  gh repo clone "$REPO" "$TARGET"

  return 0
}
#+end_src

***** TUI Applications
These are applications that use the terminal features to create UIs.

***** TUI Examples
- [[https://github.com/jesseduffield/lazygit][lazygit]]
- [[https://github.com/jesseduffield/lazydocker][lazydocker]]
- [[https://htop.dev/][htop]]
- [[https://www.nethack.org/common/index.html][nethack]]

**** Neovim
***** What is Neovim
It's the editor!

***** Advantages of Neovim
- Based on Vim.
- Incredibly extensible.
- Open source with a great community.
- Amazing documentation via ~:help~.

***** Disadvantages
- Learning curve.
- Configuration.

***** Some features
- Movement.
- Window management.
- Mappings.
- Jumps.
-
- Excellent integration with the UNIX environment.

***** Where to start?
- Run ~vimtutor~
- Run ~vim +h user-manual~

***** I don't want to use this editor
Use a plugin for your editor.
- [[https://marketplace.visualstudio.com/items?itemName=vscodevim.vim][vscode - vim]]
- [[https://github.com/JetBrains/ideavim][ideavim]]

~Note~: even if this is a good approach, you won't have access to all the possibilities the editor has. Again, use what you find useful.

**** TODO Tmux


** Tips and tricks

*** TODO Karabiner + Goku
*** Moving through multiple instances of the same app
By using ~CMD + `~ you can change between the instances of the same
application. Really useful for multiple browsers or editor instances.

*** Persisting the configuration
A development configuration needs a lot of time and effort, so it's good
to have it secure and portable. For this, it's recommended to save your
~dotfiles~ somewhere. There's a lot of options, but personally I use git
with a bare repository. You can follow this tutorial to manage your
~dotfiles~ https://www.atlassian.com/git/tutorials/dotfiles

** Some cool resources
- [[https://explainshell.com/][ExplainShell]]
- [[https://github.com/jlevy/the-art-of-command-line][The art of command line]]
- [[https://www.youtube.com/watch?v=l8iXMgk2nnY][VIM tutorial: linux terminal tools for bug bounty pentest and redteams with @tomnomnom]]
